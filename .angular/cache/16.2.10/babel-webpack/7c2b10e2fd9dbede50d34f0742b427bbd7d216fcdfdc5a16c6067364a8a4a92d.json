{"ast":null,"code":"import _asyncToGenerator from \"F:/A\\xF1o 2023-Semestre2/PROGRAMACION DE APLICACIONES MOVILES/DESARROLLO PROYECTO REGISTRAPP/registrApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { Validators } from '@angular/forms';\nimport { Preferences } from '@capacitor/preferences';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/region.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@ionic/angular\";\nfunction UserRegistrationPage_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"ion-item\")(2, \"ion-label\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"ion-input\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const controlName_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r0.getLabel(controlName_r1));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formControlName\", controlName_r1)(\"title\", ctx_r0.getHoverMessage(controlName_r1));\n  }\n}\nconst _c0 = function () {\n  return [\"nombreUsuario\", \"nombre\", \"apellido\", \"rut\", \"correo\", \"telefono\", \"direccion\", \"regionSeleccionada\", \"contrasena\", \"repetirContrasena\"];\n};\nclass UserRegistrationPage {\n  constructor(regionService, formBuilder) {\n    this.regionService = regionService;\n    this.formBuilder = formBuilder;\n    this.regiones = [];\n    this.regionSeleccionada = {\n      id: 0,\n      nombre: ''\n    };\n    this.hoverMessages = {};\n    // Inicializa el formulario con validadores\n    this.userForm = this.formBuilder.group({\n      nombreUsuario: ['', [Validators.required, Validators.minLength(4), Validators.pattern(/^[a-zA-Z0-9]+$/)]],\n      nombre: ['', [Validators.required, Validators.maxLength(50), Validators.pattern(/^[a-zA-Z0-9]+$/)]],\n      apellido: ['', [Validators.required, Validators.maxLength(50), Validators.pattern(/^[a-zA-Z0-9]+$/)]],\n      rut: ['', [Validators.required, Validators.pattern(/^\\d{7,8}[kK]$/)]],\n      correo: ['', [Validators.required, Validators.email]],\n      telefono: ['', [Validators.required, Validators.pattern(/^\\d{9}$/)]],\n      direccion: ['', [Validators.required]],\n      regionSeleccionada: ['', [Validators.required]],\n      contrasena: ['', [Validators.required, Validators.minLength(8)]],\n      repetirContrasena: ['', [Validators.required, Validators.minLength(8)]]\n    });\n    // Asigna los mensajes de ayuda para hover\n    this.hoverMessages = {\n      nombreUsuario: 'Campo obligatorio. Longitud mínima de 4 caracteres.',\n      nombre: 'Campo obligatorio. Solo caracteres alfanuméricos, máximo 50.',\n      apellido: 'Campo obligatorio. Solo caracteres alfanuméricos, máximo 50.',\n      rut: 'Campo obligatorio. Formato ejemplo: 12345678k',\n      correo: 'Campo obligatorio. Debe ser un correo electrónico válido.',\n      telefono: 'Campo obligatorio. Debe tener exactamente 9 dígitos.',\n      direccion: 'Campo obligatorio.',\n      regionSeleccionada: 'Campo obligatorio.',\n      contrasena: 'Campo obligatorio. Longitud mínima de 8 caracteres.',\n      repetirContrasena: 'Campo obligatorio. Longitud mínima de 8 caracteres.'\n    };\n  }\n  ngOnInit() {\n    this.regionService.getRegiones().subscribe(response => {\n      this.regiones = response.regiones;\n      console.log(this.regiones);\n    });\n  }\n  guardarDatosEnPreferences() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        // Comprueba la validez del formulario antes de guardar datos\n        if (_this.userForm.valid) {\n          const datosUsuario = {\n            key: 'usuario_' + _this.userForm.value.nombreUsuario,\n            value: JSON.stringify(_this.userForm.value)\n          };\n          yield Preferences.set(datosUsuario);\n          console.log('Datos del usuario almacenados en Preferences correctamente');\n        } else {\n          console.error('Error: El formulario contiene campos no válidos');\n        }\n      } catch (error) {\n        console.error('Error al almacenar datos del usuario en Preferences:', error);\n      }\n    })();\n  }\n}\n_class = UserRegistrationPage;\n_class.ɵfac = function UserRegistrationPage_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.RegionService), i0.ɵɵdirectiveInject(i2.FormBuilder));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-user-registration\"]],\n  decls: 9,\n  vars: 6,\n  consts: [[3, \"translucent\"], [1, \"ion-padding\", 3, \"fullscreen\"], [3, \"formGroup\", \"ngSubmit\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", 3, \"disabled\"], [\"type\", \"text\", 3, \"formControlName\", \"title\"]],\n  template: function UserRegistrationPage_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\", 0)(1, \"ion-toolbar\")(2, \"ion-title\");\n      i0.ɵɵtext(3, \"Registro de Usuario\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(4, \"ion-content\", 1)(5, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function UserRegistrationPage_Template_form_ngSubmit_5_listener() {\n        return ctx.guardarDatosEnPreferences();\n      });\n      i0.ɵɵtemplate(6, UserRegistrationPage_ng_container_6_Template, 5, 3, \"ng-container\", 3);\n      i0.ɵɵelementStart(7, \"ion-button\", 4);\n      i0.ɵɵtext(8, \"Guardar Datos del Usuario\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"translucent\", true);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"fullscreen\", true);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.userForm);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpureFunction0(5, _c0));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", !ctx.userForm.valid);\n    }\n  },\n  dependencies: [i3.NgForOf, i2.ɵNgNoValidate, i2.NgControlStatus, i2.NgControlStatusGroup, i4.IonButton, i4.IonContent, i4.IonHeader, i4.IonInput, i4.IonItem, i4.IonLabel, i4.IonTitle, i4.IonToolbar, i4.TextValueAccessor, i2.FormGroupDirective, i2.FormControlName],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { UserRegistrationPage };","map":{"version":3,"names":["Validators","Preferences","i0","ɵɵelementContainerStart","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵelementContainerEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","getLabel","controlName_r1","ɵɵproperty","getHoverMessage","UserRegistrationPage","constructor","regionService","formBuilder","regiones","regionSeleccionada","id","nombre","hoverMessages","userForm","group","nombreUsuario","required","minLength","pattern","maxLength","apellido","rut","correo","email","telefono","direccion","contrasena","repetirContrasena","ngOnInit","getRegiones","subscribe","response","console","log","guardarDatosEnPreferences","_this","_asyncToGenerator","valid","datosUsuario","key","value","JSON","stringify","set","error","ɵɵdirectiveInject","i1","RegionService","i2","FormBuilder","selectors","decls","vars","consts","template","UserRegistrationPage_Template","rf","ctx","ɵɵlistener","UserRegistrationPage_Template_form_ngSubmit_5_listener","ɵɵtemplate","UserRegistrationPage_ng_container_6_Template","ɵɵpureFunction0","_c0"],"sources":["F:\\Año 2023-Semestre2\\PROGRAMACION DE APLICACIONES MOVILES\\DESARROLLO PROYECTO REGISTRAPP\\registrApp\\src\\app\\user-registration\\user-registration.page.ts","F:\\Año 2023-Semestre2\\PROGRAMACION DE APLICACIONES MOVILES\\DESARROLLO PROYECTO REGISTRAPP\\registrApp\\src\\app\\user-registration\\user-registration.page.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, AbstractControl } from '@angular/forms';\nimport { Preferences } from '@capacitor/preferences';\nimport { RegionService } from '../service/region.service';\nimport { Region } from '../models/region.model';\n\n@Component({\n  selector: 'app-user-registration',\n  templateUrl: './user-registration.page.html',\n  styleUrls: ['./user-registration.page.scss'],\n})\n\nexport class UserRegistrationPage implements OnInit {\n  regiones: Region[] = [];\n  regionSeleccionada: Region = { id: 0, nombre: '' };\n  userForm: FormGroup; // Formulario reactivo para la validación\n  hoverMessages: { [key: string]: string } = {};\n\n  constructor(\n    private regionService: RegionService,\n    private formBuilder: FormBuilder\n  ) {\n    // Inicializa el formulario con validadores\n    this.userForm = this.formBuilder.group({\n      nombreUsuario: [\n        '',\n        [\n          Validators.required,\n          Validators.minLength(4),\n          Validators.pattern(/^[a-zA-Z0-9]+$/),\n        ],\n      ],\n      nombre: [\n        '',\n        [\n          Validators.required,\n          Validators.maxLength(50),\n          Validators.pattern(/^[a-zA-Z0-9]+$/),\n        ],\n      ],\n      apellido: [\n        '',\n        [\n          Validators.required,\n          Validators.maxLength(50),\n          Validators.pattern(/^[a-zA-Z0-9]+$/),\n        ],\n      ],\n      rut: [\n        '',\n        [\n          Validators.required,\n          Validators.pattern(/^\\d{7,8}[kK]$/),\n        ],\n      ],\n      correo: ['', [Validators.required, Validators.email]],\n      telefono: [\n        '',\n        [\n          Validators.required,\n          Validators.pattern(/^\\d{9}$/),\n        ],\n      ],\n      direccion: ['', [Validators.required]],\n      regionSeleccionada: ['', [Validators.required]],\n      contrasena: [\n        '',\n        [\n          Validators.required,\n          Validators.minLength(8),\n        ],\n      ],\n      repetirContrasena: [\n        '',\n        [\n          Validators.required,\n          Validators.minLength(8),\n        ],\n      ],\n    });\n\n    // Asigna los mensajes de ayuda para hover\n    this.hoverMessages = {\n      nombreUsuario: 'Campo obligatorio. Longitud mínima de 4 caracteres.',\n      nombre: 'Campo obligatorio. Solo caracteres alfanuméricos, máximo 50.',\n      apellido: 'Campo obligatorio. Solo caracteres alfanuméricos, máximo 50.',\n      rut: 'Campo obligatorio. Formato ejemplo: 12345678k',\n      correo: 'Campo obligatorio. Debe ser un correo electrónico válido.',\n      telefono: 'Campo obligatorio. Debe tener exactamente 9 dígitos.',\n      direccion: 'Campo obligatorio.',\n      regionSeleccionada: 'Campo obligatorio.',\n      contrasena: 'Campo obligatorio. Longitud mínima de 8 caracteres.',\n      repetirContrasena: 'Campo obligatorio. Longitud mínima de 8 caracteres.',\n    };\n  }\n\n  ngOnInit() {\n    this.regionService.getRegiones().subscribe(response => {\n      this.regiones = response.regiones;\n      console.log(this.regiones);\n    });\n  }\n\n  async guardarDatosEnPreferences() {\n    try {\n      // Comprueba la validez del formulario antes de guardar datos\n      if (this.userForm.valid) {\n        const datosUsuario = {\n          key: 'usuario_' + this.userForm.value.nombreUsuario,\n          value: JSON.stringify(this.userForm.value),\n        };\n\n        await Preferences.set(datosUsuario);\n\n        console.log('Datos del usuario almacenados en Preferences correctamente');\n      } else {\n        console.error('Error: El formulario contiene campos no válidos');\n      }\n    } catch (error) {\n      console.error('Error al almacenar datos del usuario en Preferences:', error);\n    }\n  }\n}\n","<ion-header [translucent]=\"true\">\n  <ion-toolbar>\n    <ion-title>Registro de Usuario</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content [fullscreen]=\"true\" class=\"ion-padding\">\n  <form [formGroup]=\"userForm\" (ngSubmit)=\"guardarDatosEnPreferences()\">\n    <ng-container *ngFor=\"let controlName of ['nombreUsuario', 'nombre', 'apellido', 'rut', 'correo', 'telefono', 'direccion', 'regionSeleccionada', 'contrasena', 'repetirContrasena']\">\n      <ion-item>\n        <ion-label>{{ getLabel(controlName) }}</ion-label>\n        <ion-input type=\"text\" [formControlName]=\"controlName\" [title]=\"getHoverMessage(controlName)\"></ion-input>\n      </ion-item>\n    </ng-container>\n\n    <!-- Botón para almacenar datos del usuario en Preferences -->\n    <ion-button type=\"submit\" [disabled]=\"!userForm.valid\">Guardar Datos del Usuario</ion-button>\n  </form>\n</ion-content>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}