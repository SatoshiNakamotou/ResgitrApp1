{"ast":null,"code":"export class User {\n  constructor(usuario, nombre, apellido, rut, correo, carrera, telefono, region, direccion, contrasena) {\n    this.usuario = usuario;\n    this.nombre = nombre;\n    this.apellido = apellido;\n    this.rut = rut;\n    this.correo = correo;\n    this.carrera = carrera;\n    this.telefono = telefono;\n    this.region = region;\n    this.direccion = direccion;\n    // Generar hash y sal a partir de la contraseña\n    const {\n      hash,\n      sal\n    } = this.generarHashYSal(contrasena);\n    this.hashContrasena = hash;\n    this.sal = sal;\n  }\n  generarHashYSal(contrasena) {\n    // Lógica para generar el hash y sal, utiliza bibliotecas o funciones de hash seguras\n    // ...\n    // Devuelve el hash y sal generados\n    return {\n      hash: 'hash_generado',\n      sal: 'sal_generada'\n    };\n  }\n}","map":{"version":3,"names":["User","constructor","usuario","nombre","apellido","rut","correo","carrera","telefono","region","direccion","contrasena","hash","sal","generarHashYSal","hashContrasena"],"sources":["F:\\Año 2023-Semestre2\\PROGRAMACION DE APLICACIONES MOVILES\\DESARROLLO PROYECTO REGISTRAPP\\registrApp\\src\\app\\models\\user.model.ts"],"sourcesContent":["export class User {\r\n    usuario: string;\r\n    nombre: string;\r\n    apellido: string;\r\n    rut: string; // Agrega los campos que falten\r\n    correo: string;\r\n    carrera: string;\r\n    telefono: string;\r\n    region: string;\r\n    direccion: string;\r\n    hashContrasena: string;\r\n    sal: string;\r\n  \r\n    constructor(\r\n      usuario: string,\r\n      nombre: string,\r\n      apellido: string,\r\n      rut: string,\r\n      correo: string,\r\n      carrera: string,\r\n      telefono: string,\r\n      region: string,\r\n      direccion: string,\r\n      contrasena: string\r\n    ) {\r\n      this.usuario = usuario;\r\n      this.nombre = nombre;\r\n      this.apellido = apellido;\r\n      this.rut = rut;\r\n      this.correo = correo;\r\n      this.carrera = carrera;\r\n      this.telefono = telefono;\r\n      this.region = region;\r\n      this.direccion = direccion;\r\n  \r\n      // Generar hash y sal a partir de la contraseña\r\n      const { hash, sal } = this.generarHashYSal(contrasena);\r\n      this.hashContrasena = hash;\r\n      this.sal = sal;\r\n    }\r\n  \r\n    private generarHashYSal(contrasena: string): { hash: string; sal: string } {\r\n      // Lógica para generar el hash y sal, utiliza bibliotecas o funciones de hash seguras\r\n      // ...\r\n      // Devuelve el hash y sal generados\r\n      return { hash: 'hash_generado', sal: 'sal_generada' };\r\n    }\r\n  }\r\n  "],"mappings":"AAAA,OAAM,MAAOA,IAAI;EAabC,YACEC,OAAe,EACfC,MAAc,EACdC,QAAgB,EAChBC,GAAW,EACXC,MAAc,EACdC,OAAe,EACfC,QAAgB,EAChBC,MAAc,EACdC,SAAiB,EACjBC,UAAkB;IAElB,IAAI,CAACT,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,GAAG,GAAGA,GAAG;IACd,IAAI,CAACC,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,SAAS,GAAGA,SAAS;IAE1B;IACA,MAAM;MAAEE,IAAI;MAAEC;IAAG,CAAE,GAAG,IAAI,CAACC,eAAe,CAACH,UAAU,CAAC;IACtD,IAAI,CAACI,cAAc,GAAGH,IAAI;IAC1B,IAAI,CAACC,GAAG,GAAGA,GAAG;EAChB;EAEQC,eAAeA,CAACH,UAAkB;IACxC;IACA;IACA;IACA,OAAO;MAAEC,IAAI,EAAE,eAAe;MAAEC,GAAG,EAAE;IAAc,CAAE;EACvD"},"metadata":{},"sourceType":"module","externalDependencies":[]}