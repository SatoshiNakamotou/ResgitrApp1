{"ast":null,"code":"import _asyncToGenerator from \"F:/A\\xF1o 2023-Semestre2/PROGRAMACION DE APLICACIONES MOVILES/DESARROLLO PROYECTO REGISTRAPP ACTUAL/registrApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { Preferences } from '@capacitor/preferences';\nimport { User } from '../models/user.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/region.service\";\nimport * as i2 from \"@ionic/angular\";\nimport * as i3 from \"@angular/forms\";\nclass UserRegistrationPage {\n  constructor(regionService, navCtrl, toastController) {\n    this.regionService = regionService;\n    this.navCtrl = navCtrl;\n    this.toastController = toastController;\n    this.regiones = [];\n    this.regionSeleccionada = {\n      id: 0,\n      nombre: ''\n    };\n    this.usuario = '';\n    this.nombre = '';\n    this.apellido = '';\n    this.rut = '';\n    this.correo = '';\n    this.carrera = '';\n    this.telefono = '';\n    this.region = '';\n    this.direccion = '';\n    this.contrasena = '';\n    this.repetirContrasena = '';\n  }\n  ngOnInit() {\n    this.regionService.getRegiones().subscribe(response => {\n      this.regiones = response.regiones;\n      console.log(this.regiones);\n    });\n  }\n  guardarDatos() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      // Verifica que las contraseñas coincidan\n      if (_this.contrasena !== _this.repetirContrasena) {\n        console.error('Las contraseñas no coinciden');\n        return;\n      }\n      // Lógica para guardar los datos del formulario en la instancia de User\n      const nuevoUsuario = new User(_this.usuario, _this.nombre, _this.apellido, _this.rut, _this.correo, _this.carrera, _this.telefono, _this.region, _this.direccion, _this.contrasena);\n      // Almacenar el usuario en Preferences\n      yield _this.guardarUsuarioEnPreferences(nuevoUsuario);\n      // Lógica para registrar al usuario en el servidor\n      yield _this.registrarUsuarioEnServidor(nuevoUsuario);\n    })();\n  }\n  registrarUsuarioEnServidor(usuario) {\n    return _asyncToGenerator(function* () {\n      try {\n        // Aquí deberías hacer una solicitud HTTP al servidor para registrar el usuario\n        // Puedes utilizar el servicio AuthService o crear un nuevo servicio para manejar las operaciones de registro\n        // Ejemplo:\n        // await this.authService.registrarUsuario(usuario);\n        // Luego, maneja la respuesta del servidor según tus necesidades\n        console.log('Usuario registrado exitosamente en el servidor');\n      } catch (error) {\n        console.error('Error al registrar el usuario en el servidor:', error);\n        // Puedes mostrar un mensaje de error al usuario aquí\n      }\n    })();\n  }\n\n  registrar() {\n    // Llama a la función validarCampos antes de ejecutar la lógica de guardarDatos\n    if (this.validarCampos(this.usuario, this.nombre, this.apellido, this.rut, this.correo, this.carrera, this.telefono, this.region, this.direccion, this.contrasena, this.repetirContrasena)) {\n      this.guardarDatos();\n      // Aquí puedes agregar más lógica si es necesario\n      this.mostrarMensajeRegistro();\n      this.navCtrl.navigateForward('/home');\n    }\n  }\n  cancelar() {\n    // Lógica para cancelar el registro\n    this.navCtrl.navigateForward('/home');\n  }\n  guardarUsuarioEnPreferences(usuario) {\n    return _asyncToGenerator(function* () {\n      try {\n        const key = 'user_data_' + usuario.usuario;\n        yield Preferences.set({\n          key: key,\n          value: JSON.stringify(usuario)\n        });\n        console.log('Usuario almacenado en Preferences con clave:', key);\n      } catch (error) {\n        console.error('Error al almacenar el usuario en Preferences:', error);\n      }\n    })();\n  }\n  validarCampos(usuario, nombre, apellido, rut, correo, carrera, telefono, region, direccion, contrasena, repetirContrasena) {\n    // Lógica de validación aquí\n    if (usuario == '') {\n      alert('Favor ingresar usuario');\n      return false;\n    } else if (nombre == '') {\n      alert('Favor ingresar nombre');\n      return false;\n    } else if (apellido == '') {\n      alert('Favor ingresar Apellido');\n      return false;\n    } else if (rut == '') {\n      alert('Favor ingresar Rut');\n      return false;\n    } else if (correo == '') {\n      alert('Favor ingresar Correo');\n      return false;\n    } else if (carrera == '') {\n      alert('Favor ingresar Carrera');\n      return false;\n    } else if (telefono == '') {\n      alert('Favor ingresar Telefono');\n      return false;\n    } else if (region == '') {\n      alert('Favor ingresar Region');\n      return false;\n    } else if (direccion == '') {\n      alert('Favor ingresar Direccion');\n      return false;\n    } else if (contrasena !== repetirContrasena) {\n      alert('contraseñas ingresadas no son coincidentes');\n      return false;\n    }\n    return true;\n  }\n  mostrarMensajeRegistro() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const toast = yield _this2.toastController.create({\n        message: 'Usuario registrado',\n        duration: 2000,\n        position: 'top',\n        color: 'success',\n        buttons: [{\n          text: 'Cerrar',\n          role: 'cancel'\n        }]\n      });\n      toast.present();\n    })();\n  }\n}\n_class = UserRegistrationPage;\n_class.ɵfac = function UserRegistrationPage_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.RegionService), i0.ɵɵdirectiveInject(i2.NavController), i0.ɵɵdirectiveInject(i2.ToastController));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-user-registration\"]],\n  decls: 57,\n  vars: 13,\n  consts: [[3, \"translucent\"], [1, \"ion-padding\", 3, \"fullscreen\"], [\"position\", \"stacked\"], [\"type\", \"text\", \"placeholder\", \"M\\u00EDnimo 5 caracteres\", \"maxlength\", \"25\", \"minlength\", \"5\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"maxlength\", \"20\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"placeholder\", \"Formato rut 12345678K\", \"pattern\", \"^[0-9A-Za-z]{1,8}$\", \"inputmode\", \"numeric\", \"maxlength\", \"9\", 3, \"ngModel\", \"ngModelChange\"], [\"color\", \"medium\"], [\"type\", \"text\", \"placeholder\", \"Ingrese correo electr\\u00F3nico\", \"maxlength\", \"200\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"placeholder\", \"Ingrese su carrera\", \"maxlength\", \"50\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"placeholder\", \"9 d\\u00EDgitos : Ejemplo 955445522\", \"pattern\", \"[0-9]*\", \"maxlength\", \"9\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"maxlength\", \"50\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"password\", \"minlength\", \"8\", 3, \"ngModel\", \"ngModelChange\"], [3, \"click\"]],\n  template: function UserRegistrationPage_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\", 0)(1, \"ion-toolbar\")(2, \"ion-title\");\n      i0.ɵɵtext(3, \"Registro de Usuario\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(4, \"ion-content\", 1)(5, \"ion-item\")(6, \"ion-label\", 2);\n      i0.ɵɵtext(7, \"Usuario\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"ion-input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function UserRegistrationPage_Template_ion_input_ngModelChange_8_listener($event) {\n        return ctx.usuario = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"ion-item\")(10, \"ion-label\", 2);\n      i0.ɵɵtext(11, \"Nombre\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"ion-input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function UserRegistrationPage_Template_ion_input_ngModelChange_12_listener($event) {\n        return ctx.nombre = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"ion-item\")(14, \"ion-label\", 2);\n      i0.ɵɵtext(15, \"Apellido\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"ion-input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function UserRegistrationPage_Template_ion_input_ngModelChange_16_listener($event) {\n        return ctx.apellido = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(17, \"ion-item\")(18, \"ion-label\", 2);\n      i0.ɵɵtext(19, \"RUT\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"ion-input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function UserRegistrationPage_Template_ion_input_ngModelChange_20_listener($event) {\n        return ctx.rut = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"ion-text\", 6);\n      i0.ɵɵtext(22, \"Formato ejemplo: 12345678K\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(23, \"ion-item\")(24, \"ion-label\", 2);\n      i0.ɵɵtext(25, \"Correo\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"ion-input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function UserRegistrationPage_Template_ion_input_ngModelChange_26_listener($event) {\n        return ctx.correo = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(27, \"ion-item\")(28, \"ion-label\", 2);\n      i0.ɵɵtext(29, \"Carrera\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"ion-input\", 8);\n      i0.ɵɵlistener(\"ngModelChange\", function UserRegistrationPage_Template_ion_input_ngModelChange_30_listener($event) {\n        return ctx.carrera = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(31, \"ion-item\")(32, \"ion-label\", 2);\n      i0.ɵɵtext(33, \"Tel\\u00E9fono\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(34, \"ion-input\", 9);\n      i0.ɵɵlistener(\"ngModelChange\", function UserRegistrationPage_Template_ion_input_ngModelChange_34_listener($event) {\n        return ctx.telefono = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(35, \"ion-item\")(36, \"ion-label\", 2);\n      i0.ɵɵtext(37, \"Regi\\u00F3n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(38, \"ion-input\", 10);\n      i0.ɵɵlistener(\"ngModelChange\", function UserRegistrationPage_Template_ion_input_ngModelChange_38_listener($event) {\n        return ctx.region = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(39, \"ion-item\")(40, \"ion-label\", 2);\n      i0.ɵɵtext(41, \"Direcci\\u00F3n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(42, \"ion-input\", 11);\n      i0.ɵɵlistener(\"ngModelChange\", function UserRegistrationPage_Template_ion_input_ngModelChange_42_listener($event) {\n        return ctx.direccion = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(43, \"ion-item\")(44, \"ion-label\", 2);\n      i0.ɵɵtext(45, \"Contrase\\u00F1a\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(46, \"ion-input\", 12);\n      i0.ɵɵlistener(\"ngModelChange\", function UserRegistrationPage_Template_ion_input_ngModelChange_46_listener($event) {\n        return ctx.contrasena = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(47, \"ion-item\")(48, \"ion-label\", 2);\n      i0.ɵɵtext(49, \"Repetir Contrase\\u00F1a\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(50, \"ion-input\", 12);\n      i0.ɵɵlistener(\"ngModelChange\", function UserRegistrationPage_Template_ion_input_ngModelChange_50_listener($event) {\n        return ctx.repetirContrasena = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(51, \"ion-item\")(52, \"ion-button\", 13);\n      i0.ɵɵlistener(\"click\", function UserRegistrationPage_Template_ion_button_click_52_listener() {\n        return ctx.registrar();\n      });\n      i0.ɵɵtext(53, \"Registrar\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(54, \"ion-item\")(55, \"ion-button\", 13);\n      i0.ɵɵlistener(\"click\", function UserRegistrationPage_Template_ion_button_click_55_listener() {\n        return ctx.cancelar();\n      });\n      i0.ɵɵtext(56, \"Cancelar\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"translucent\", true);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"fullscreen\", true);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.usuario);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.nombre);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.apellido);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.rut);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.correo);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.carrera);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.telefono);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.region);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.direccion);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.contrasena);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.repetirContrasena);\n    }\n  },\n  dependencies: [i3.NgControlStatus, i3.MinLengthValidator, i3.MaxLengthValidator, i3.PatternValidator, i3.NgModel, i2.IonButton, i2.IonContent, i2.IonHeader, i2.IonInput, i2.IonItem, i2.IonLabel, i2.IonText, i2.IonTitle, i2.IonToolbar, i2.TextValueAccessor],\n  styles: [\"@charset \\\"UTF-8\\\";\\n\\n\\nion-content[_ngcontent-%COMP%] {\\n  --background: #f5f5f5; \\n\\n}\\n\\n\\n\\nion-item[_ngcontent-%COMP%] {\\n  margin-bottom: 15px; \\n\\n}\\n\\n\\n\\nion-button[_ngcontent-%COMP%] {\\n  --background: #4caf50; \\n\\n  --color: #fff; \\n\\n  --border-radius: 5px; \\n\\n  width: 100%; \\n\\n}\\n\\n\\n\\nion-text[_ngcontent-%COMP%] {\\n  font-size: 12px; \\n\\n  color: #757575; \\n\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uLy4uLy4uLy4uLy4uL0ElQzMlQjFvJTIwMjAyMy1TZW1lc3RyZTIvUFJPR1JBTUFDSU9OJTIwREUlMjBBUExJQ0FDSU9ORVMlMjBNT1ZJTEVTL0RFU0FSUk9MTE8lMjBQUk9ZRUNUTyUyMFJFR0lTVFJBUFAlMjBBQ1RVQUwvcmVnaXN0ckFwcC9zcmMvYXBwL3VzZXItcmVnaXN0cmF0aW9uL3VzZXItcmVnaXN0cmF0aW9uLnBhZ2Uuc2NzcyIsIndlYnBhY2s6Ly8uL3NyYy9hcHAvdXNlci1yZWdpc3RyYXRpb24vdXNlci1yZWdpc3RyYXRpb24ucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGdCQUFnQjtBQ0FoQiw0Q0FBQTtBQUNBO0VBQ0UscUJBQUEsRUFBQSxtQkFBQTtBREVGOztBQ0NBLDZDQUFBO0FBQ0E7RUFDRSxtQkFBQSxFQUFBLG9DQUFBO0FERUY7O0FDQ0EscUNBQUE7QUFDQTtFQUNFLHFCQUFBLEVBQUEsbUJBQUE7RUFDQSxhQUFBLEVBQUEsb0JBQUE7RUFDQSxvQkFBQSxFQUFBLG1CQUFBO0VBQ0EsV0FBQSxFQUFBLGlEQUFBO0FERUY7O0FDQ0EsNENBQUE7QUFDQTtFQUNFLGVBQUEsRUFBQSxxQkFBQTtFQUNBLGNBQUEsRUFBQSxvQkFBQTtBREVGIiwic291cmNlc0NvbnRlbnQiOlsiQGNoYXJzZXQgXCJVVEYtOFwiO1xuLyogRXN0aWxvIHBhcmEgZWwgY29udGVuaWRvIGRlbCBmb3JtdWxhcmlvICovXG5pb24tY29udGVudCB7XG4gIC0tYmFja2dyb3VuZDogI2Y1ZjVmNTsgLyogQ29sb3IgZGUgZm9uZG8gKi9cbn1cblxuLyogRXN0aWxvIHBhcmEgbG9zIGVsZW1lbnRvcyBkZWwgZm9ybXVsYXJpbyAqL1xuaW9uLWl0ZW0ge1xuICBtYXJnaW4tYm90dG9tOiAxNXB4OyAvKiBNYXJnZW4gaW5mZXJpb3IgZW50cmUgZWxlbWVudG9zICovXG59XG5cbi8qIEVzdGlsbyBwYXJhIGVsIGJvdMODwrNuIGRlIHJlZ2lzdHJvICovXG5pb24tYnV0dG9uIHtcbiAgLS1iYWNrZ3JvdW5kOiAjNGNhZjUwOyAvKiBDb2xvciBkZSBmb25kbyAqL1xuICAtLWNvbG9yOiAjZmZmOyAvKiBDb2xvciBkZWwgdGV4dG8gKi9cbiAgLS1ib3JkZXItcmFkaXVzOiA1cHg7IC8qIFJhZGlvIGRlIGJvcmRlICovXG4gIHdpZHRoOiAxMDAlOyAvKiBBbmNobyBkZWwgYm90w4PCs24gYWwgMTAwJSBkZWwgY29udGVuZWRvciBwYWRyZSAqL1xufVxuXG4vKiBFc3RpbG8gcGFyYSBlbCBtZW5zYWplIGRlIHJlcXVlcmltaWVudG8gKi9cbmlvbi10ZXh0IHtcbiAgZm9udC1zaXplOiAxMnB4OyAvKiBUYW1hw4PCsW8gZGUgZnVlbnRlICovXG4gIGNvbG9yOiAjNzU3NTc1OyAvKiBDb2xvciBkZWwgdGV4dG8gKi9cbn0iLCIvKiBFc3RpbG8gcGFyYSBlbCBjb250ZW5pZG8gZGVsIGZvcm11bGFyaW8gKi9cclxuaW9uLWNvbnRlbnQge1xyXG4gIC0tYmFja2dyb3VuZDogI2Y1ZjVmNTsgLyogQ29sb3IgZGUgZm9uZG8gKi9cclxufVxyXG5cclxuLyogRXN0aWxvIHBhcmEgbG9zIGVsZW1lbnRvcyBkZWwgZm9ybXVsYXJpbyAqL1xyXG5pb24taXRlbSB7XHJcbiAgbWFyZ2luLWJvdHRvbTogMTVweDsgLyogTWFyZ2VuIGluZmVyaW9yIGVudHJlIGVsZW1lbnRvcyAqL1xyXG59XHJcblxyXG4vKiBFc3RpbG8gcGFyYSBlbCBib3TDg8KzbiBkZSByZWdpc3RybyAqL1xyXG5pb24tYnV0dG9uIHtcclxuICAtLWJhY2tncm91bmQ6ICM0Y2FmNTA7IC8qIENvbG9yIGRlIGZvbmRvICovXHJcbiAgLS1jb2xvcjogI2ZmZjsgLyogQ29sb3IgZGVsIHRleHRvICovXHJcbiAgLS1ib3JkZXItcmFkaXVzOiA1cHg7IC8qIFJhZGlvIGRlIGJvcmRlICovXHJcbiAgd2lkdGg6IDEwMCU7IC8qIEFuY2hvIGRlbCBib3TDg8KzbiBhbCAxMDAlIGRlbCBjb250ZW5lZG9yIHBhZHJlICovXHJcbn1cclxuXHJcbi8qIEVzdGlsbyBwYXJhIGVsIG1lbnNhamUgZGUgcmVxdWVyaW1pZW50byAqL1xyXG5pb24tdGV4dCB7XHJcbiAgZm9udC1zaXplOiAxMnB4OyAvKiBUYW1hw4PCsW8gZGUgZnVlbnRlICovXHJcbiAgY29sb3I6ICM3NTc1NzU7IC8qIENvbG9yIGRlbCB0ZXh0byAqL1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});\nexport { UserRegistrationPage };","map":{"version":3,"names":["Preferences","User","UserRegistrationPage","constructor","regionService","navCtrl","toastController","regiones","regionSeleccionada","id","nombre","usuario","apellido","rut","correo","carrera","telefono","region","direccion","contrasena","repetirContrasena","ngOnInit","getRegiones","subscribe","response","console","log","guardarDatos","_this","_asyncToGenerator","error","nuevoUsuario","guardarUsuarioEnPreferences","registrarUsuarioEnServidor","registrar","validarCampos","mostrarMensajeRegistro","navigateForward","cancelar","key","set","value","JSON","stringify","alert","_this2","toast","create","message","duration","position","color","buttons","text","role","present","i0","ɵɵdirectiveInject","i1","RegionService","i2","NavController","ToastController","selectors","decls","vars","consts","template","UserRegistrationPage_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","UserRegistrationPage_Template_ion_input_ngModelChange_8_listener","$event","UserRegistrationPage_Template_ion_input_ngModelChange_12_listener","UserRegistrationPage_Template_ion_input_ngModelChange_16_listener","UserRegistrationPage_Template_ion_input_ngModelChange_20_listener","UserRegistrationPage_Template_ion_input_ngModelChange_26_listener","UserRegistrationPage_Template_ion_input_ngModelChange_30_listener","UserRegistrationPage_Template_ion_input_ngModelChange_34_listener","UserRegistrationPage_Template_ion_input_ngModelChange_38_listener","UserRegistrationPage_Template_ion_input_ngModelChange_42_listener","UserRegistrationPage_Template_ion_input_ngModelChange_46_listener","UserRegistrationPage_Template_ion_input_ngModelChange_50_listener","UserRegistrationPage_Template_ion_button_click_52_listener","UserRegistrationPage_Template_ion_button_click_55_listener","ɵɵproperty","ɵɵadvance"],"sources":["F:\\Año 2023-Semestre2\\PROGRAMACION DE APLICACIONES MOVILES\\DESARROLLO PROYECTO REGISTRAPP ACTUAL\\registrApp\\src\\app\\user-registration\\user-registration.page.ts","F:\\Año 2023-Semestre2\\PROGRAMACION DE APLICACIONES MOVILES\\DESARROLLO PROYECTO REGISTRAPP ACTUAL\\registrApp\\src\\app\\user-registration\\user-registration.page.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Preferences } from '@capacitor/preferences';\nimport { RegionService } from '../service/region.service';\nimport { Region } from '../models/region.model';\nimport { User } from '../models/user.model';\nimport { NavController } from '@ionic/angular'; \nimport { ToastController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-user-registration',\n  templateUrl: './user-registration.page.html',\n  styleUrls: ['./user-registration.page.scss'],\n})\nexport class UserRegistrationPage implements OnInit {\n  regiones: Region[] = [];\n  regionSeleccionada: Region = { id: 0, nombre: '' };\n\n  usuario: string = '';\n  nombre: string = '';\n  apellido: string = '';\n  rut: string = '';\n  correo: string = '';\n  carrera: string = '';\n  telefono: string = '';\n  region: string = '';\n  direccion: string = '';\n  contrasena: string = '';\n  repetirContrasena: string = '';\n\n\n  constructor(\n    private regionService: RegionService,\n    private navCtrl: NavController,\n    private toastController: ToastController\n    ) {}\n\n  ngOnInit() {\n    this.regionService.getRegiones().subscribe(response => {\n      this.regiones = response.regiones;\n      console.log(this.regiones);\n    });\n  }\n\n  async guardarDatos() {\n    // Verifica que las contraseñas coincidan\n    if (this.contrasena !== this.repetirContrasena) {\n      console.error('Las contraseñas no coinciden');\n      return;\n    }\n\n    // Lógica para guardar los datos del formulario en la instancia de User\n    const nuevoUsuario = new User(\n      this.usuario,\n      this.nombre,\n      this.apellido,\n      this.rut,\n      this.correo,\n      this.carrera,\n      this.telefono,\n      this.region,\n      this.direccion,\n      this.contrasena\n    );\n\n    // Almacenar el usuario en Preferences\n    await this.guardarUsuarioEnPreferences(nuevoUsuario);\n\n    // Lógica para registrar al usuario en el servidor\n    await this.registrarUsuarioEnServidor(nuevoUsuario);\n  }\n\n  async registrarUsuarioEnServidor(usuario: User): Promise<void> {\n    try {\n      // Aquí deberías hacer una solicitud HTTP al servidor para registrar el usuario\n      // Puedes utilizar el servicio AuthService o crear un nuevo servicio para manejar las operaciones de registro\n      // Ejemplo:\n      // await this.authService.registrarUsuario(usuario);\n\n      // Luego, maneja la respuesta del servidor según tus necesidades\n      console.log('Usuario registrado exitosamente en el servidor');\n    } catch (error) {\n      console.error('Error al registrar el usuario en el servidor:', error);\n      // Puedes mostrar un mensaje de error al usuario aquí\n    }\n  }\n\n  registrar() {\n    // Llama a la función validarCampos antes de ejecutar la lógica de guardarDatos\n    if (this.validarCampos(\n      this.usuario,\n      this.nombre,\n      this.apellido,\n      this.rut,\n      this.correo,\n      this.carrera,\n      this.telefono,\n      this.region,\n      this.direccion,\n      this.contrasena,\n      this.repetirContrasena\n    )) {\n      this.guardarDatos();\n      // Aquí puedes agregar más lógica si es necesario\n      this.mostrarMensajeRegistro()\n      this.navCtrl.navigateForward('/home');\n    }\n  }\n  \n\n  cancelar() {\n    // Lógica para cancelar el registro\n    this.navCtrl.navigateForward('/home');\n  }\n\n  async guardarUsuarioEnPreferences(usuario: User): Promise<void> {\n    try {\n      const key = 'user_data_' + usuario.usuario;\n      await Preferences.set({\n        key: key,\n        value: JSON.stringify(usuario),\n      });\n      console.log('Usuario almacenado en Preferences con clave:', key);\n    } catch (error) {\n      console.error('Error al almacenar el usuario en Preferences:', error);\n    }\n  }\n  validarCampos(\n    usuario: string, \n    nombre: string, \n    apellido: string, \n    rut: string, \n    correo: string,\n    carrera: string, \n    telefono: string, \n    region: string, \n    direccion: string, \n    contrasena: string, \n    repetirContrasena: string\n  ): boolean {\n    // Lógica de validación aquí\n    if (usuario ==   '') {\n      alert('Favor ingresar usuario');\n      return false;\n    } \n    else if (nombre==   '') {\n      alert('Favor ingresar nombre');\n      return false;\n    }\n    else if (apellido==   '') {\n      alert('Favor ingresar Apellido');\n      return false;\n    }\n    else if (rut==   '') {\n      alert('Favor ingresar Rut');\n      return false;\n    }\n    else if (correo==   '') {\n      alert('Favor ingresar Correo');\n      return false;\n    }\n    else if (carrera==   '') {\n      alert('Favor ingresar Carrera');\n      return false;\n    }\n    else if (telefono==   '') {\n      alert('Favor ingresar Telefono');\n      return false;\n    }\n    else if (region=='') {\n      alert('Favor ingresar Region');\n      return false;\n    }\n    else if (direccion==   '') {\n      alert('Favor ingresar Direccion');\n      return false;\n    }\n    else if (contrasena!==repetirContrasena) {\n      alert('contraseñas ingresadas no son coincidentes');\n      return false;\n    }\n    return true;\n  }\n  async mostrarMensajeRegistro() {\n    const toast = await this.toastController.create({\n      message: 'Usuario registrado',\n      duration: 2000, // Duración en milisegundos\n      position: 'top', // Posición del toast (top, middle, bottom)\n      color: 'success', // Color del toast (success, warning, danger, etc.)\n      buttons: [\n        {\n          text: 'Cerrar',\n          role: 'cancel',\n        }\n      ]\n    });\n  \n    toast.present();\n  }\n}","<ion-header [translucent]=\"true\">\n  <ion-toolbar>\n    <ion-title>Registro de Usuario</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content [fullscreen]=\"true\" class=\"ion-padding\">\n  <ion-item>\n    <ion-label position=\"stacked\">Usuario</ion-label>\n    <ion-input type=\"text\" [(ngModel)]=\"usuario\" placeholder=\"Mínimo 5 caracteres\" maxlength=\"25\" minlength=\"5\"></ion-input>\n  </ion-item>\n\n  <ion-item>\n    <ion-label position=\"stacked\">Nombre</ion-label>\n    <ion-input type=\"text\" [(ngModel)]=\"nombre\" maxlength=\"20\"></ion-input>\n    <!-- Agrega aquí el mensaje de requerimiento para el nombre -->\n  </ion-item>\n\n  <ion-item>\n    <ion-label position=\"stacked\">Apellido</ion-label>\n    <ion-input type=\"text\" [(ngModel)]=\"apellido\" maxlength=\"20\"></ion-input>\n    <!-- Agrega aquí el mensaje de requerimiento para el apellido -->\n  </ion-item>\n\n  <ion-item>\n    <ion-label position=\"stacked\">RUT</ion-label>\n    <ion-input type=\"text\" [(ngModel)]=\"rut\" placeholder=\"Formato rut 12345678K\" pattern=\"^[0-9A-Za-z]{1,8}$\" inputmode=\"numeric\" maxlength=\"9\"></ion-input>\n    <ion-text color=\"medium\">Formato ejemplo: 12345678K</ion-text>\n  </ion-item>\n\n  <ion-item>\n    <ion-label position=\"stacked\">Correo</ion-label>\n    <ion-input type=\"text\" [(ngModel)]=\"correo\" placeholder=\"Ingrese correo electrónico\" maxlength=\"200\"></ion-input>\n    <!-- Agrega aquí el mensaje de requerimiento para el correo -->\n  </ion-item>\n\n  <ion-item>\n    <ion-label position=\"stacked\">Carrera</ion-label>\n    <ion-input type=\"text\" [(ngModel)]=\"carrera\" placeholder=\"Ingrese su carrera\" maxlength=\"50\"></ion-input>\n    <!-- Agrega aquí el mensaje de requerimiento para la carrera -->\n  </ion-item>\n\n  <ion-item>\n    <ion-label position=\"stacked\">Teléfono</ion-label>\n    <ion-input type=\"text\" [(ngModel)]=\"telefono\" placeholder=\"9 dígitos : Ejemplo 955445522\" pattern=\"[0-9]*\" maxlength=\"9\"></ion-input>\n    <!-- Agrega aquí el mensaje de requerimiento para el teléfono -->\n  </ion-item>\n\n  <ion-item>\n    <ion-label position=\"stacked\">Región</ion-label>\n    <ion-input type=\"text\" [(ngModel)]=\"region\"></ion-input>\n    <!-- Agrega aquí el mensaje de requerimiento para la región -->\n  </ion-item>\n\n  <ion-item>\n    <ion-label position=\"stacked\">Dirección</ion-label>\n    <ion-input type=\"text\" [(ngModel)]=\"direccion\" maxlength=\"50\"></ion-input>\n    <!-- Agrega aquí el mensaje de requerimiento para la dirección -->\n  </ion-item>\n\n  <ion-item>\n    <ion-label position=\"stacked\">Contraseña</ion-label>\n    <ion-input type=\"password\" [(ngModel)]=\"contrasena\" minlength=\"8\"></ion-input>\n    <!-- Agrega aquí el mensaje de requerimiento para la contraseña -->\n  </ion-item>\n\n  <ion-item>\n    <ion-label position=\"stacked\">Repetir Contraseña</ion-label>\n    <ion-input type=\"password\" [(ngModel)]=\"repetirContrasena\" minlength=\"8\"></ion-input>\n    <!-- Agrega aquí el mensaje de requerimiento para repetir la contraseña -->\n  </ion-item>\n\n  <ion-item>\n    <ion-button (click)=\"registrar()\">Registrar</ion-button>  \n  </ion-item>\n  <ion-item>\n    <ion-button (click)=\"cancelar()\">Cancelar</ion-button>\n  </ion-item>\n  \n</ion-content>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}