{"ast":null,"code":"import _asyncToGenerator from \"F:/A\\xF1o 2023-Semestre2/PROGRAMACION DE APLICACIONES MOVILES/DESARROLLO PROYECTO REGISTRAPP ACTUAL/registrApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { BrowserQRCodeReader } from '@zxing/browser';\nimport { Geolocation } from '@capacitor/geolocation';\nlet LoginAlternativoPage = class LoginAlternativoPage {\n  constructor(navCtrl, dataService, sanitizer) {\n    this.navCtrl = navCtrl;\n    this.dataService = dataService;\n    this.sanitizer = sanitizer;\n    this.scannedQRCode = '';\n    this.currentLocation = '';\n    this.fotoURL = null;\n  }\n  ngOnInit() {\n    this.getCurrentLocation();\n    this.authenticatedUser = this.dataService.getAuthenticatedUser(); // Obtén los detalles del usuario autenticado\n  }\n\n  getCurrentLocation() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const coordinates = yield Geolocation.getCurrentPosition();\n        _this.currentLocation = `Latitud: ${coordinates.coords.latitude}, Longitud: ${coordinates.coords.longitude}`;\n        console.log('Ubicación actual:', _this.currentLocation);\n      } catch (error) {\n        console.error('Error al obtener la ubicación:', error);\n      }\n    })();\n  }\n  scanQRCode() {\n    const codeReader = new BrowserQRCodeReader();\n    codeReader.decodeFromInputVideoDevice(undefined, 'videoElement').then(result => {\n      this.scannedQRCode = result.getText();\n      console.log('Código QR escaneado:', this.scannedQRCode);\n    }).catch(err => {\n      console.error('Error al escanear:', err);\n    });\n  }\n  navigateLeft() {\n    this.navCtrl.back();\n  }\n  openLink(url) {\n    if (url) {\n      window.open(url, '_blank');\n    }\n  }\n};\nLoginAlternativoPage = __decorate([Component({\n  selector: 'app-login-alternativo',\n  templateUrl: './login-alternativo.page.html',\n  styleUrls: ['./login-alternativo.page.scss']\n})], LoginAlternativoPage);\nexport { LoginAlternativoPage };","map":{"version":3,"names":["Component","BrowserQRCodeReader","Geolocation","LoginAlternativoPage","constructor","navCtrl","dataService","sanitizer","scannedQRCode","currentLocation","fotoURL","ngOnInit","getCurrentLocation","authenticatedUser","getAuthenticatedUser","_this","_asyncToGenerator","coordinates","getCurrentPosition","coords","latitude","longitude","console","log","error","scanQRCode","codeReader","decodeFromInputVideoDevice","undefined","then","result","getText","catch","err","navigateLeft","back","openLink","url","window","open","__decorate","selector","templateUrl","styleUrls"],"sources":["F:\\Año 2023-Semestre2\\PROGRAMACION DE APLICACIONES MOVILES\\DESARROLLO PROYECTO REGISTRAPP ACTUAL\\registrApp\\src\\app\\login-alternativo\\login-alternativo.page.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { BrowserQRCodeReader } from '@zxing/browser';\nimport { NavController } from '@ionic/angular';\nimport { Geolocation, GeolocationPosition } from '@capacitor/geolocation';\nimport { DataService } from '../data.service';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-login-alternativo',\n  templateUrl: './login-alternativo.page.html',\n  styleUrls: ['./login-alternativo.page.scss'],\n})\nexport class LoginAlternativoPage implements OnInit {\n  scannedQRCode: string = '';\n  currentLocation: string = '';\n  authenticatedUser: any; // Variable para almacenar los detalles del usuario autenticado\n  fotoURL: SafeResourceUrl | null = null;\n\n  constructor(\n    private navCtrl: NavController,\n    private dataService: DataService,\n    private sanitizer: DomSanitizer\n  ) {}\n\n  ngOnInit() {\n    this.getCurrentLocation();\n    this.authenticatedUser = this.dataService.getAuthenticatedUser(); // Obtén los detalles del usuario autenticado\n  }\n\n  async getCurrentLocation() {\n    try {\n      const coordinates: GeolocationPosition = await Geolocation.getCurrentPosition();\n      this.currentLocation = `Latitud: ${coordinates.coords.latitude}, Longitud: ${coordinates.coords.longitude}`;\n      console.log('Ubicación actual:', this.currentLocation);\n    } catch (error) {\n      console.error('Error al obtener la ubicación:', error);\n    }\n  }\n\n  scanQRCode() {\n    const codeReader = new BrowserQRCodeReader();\n\n    codeReader\n      .decodeFromInputVideoDevice(undefined, 'videoElement')\n      .then((result) => {\n        this.scannedQRCode = result.getText();\n        console.log('Código QR escaneado:', this.scannedQRCode);\n      })\n      .catch((err) => {\n        console.error('Error al escanear:', err);\n      });\n  }\n\n  navigateLeft() {\n    this.navCtrl.back();\n  }\n\n  openLink(url: string) {\n    if (url) {\n      window.open(url, '_blank');\n    }\n  }\n}\n"],"mappings":";;AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAASC,mBAAmB,QAAQ,gBAAgB;AAEpD,SAASC,WAAW,QAA6B,wBAAwB;AASzE,IAAaC,oBAAoB,GAAjC,MAAaA,oBAAoB;EAM/BC,YACUC,OAAsB,EACtBC,WAAwB,EACxBC,SAAuB;IAFvB,KAAAF,OAAO,GAAPA,OAAO;IACP,KAAAC,WAAW,GAAXA,WAAW;IACX,KAAAC,SAAS,GAATA,SAAS;IARnB,KAAAC,aAAa,GAAW,EAAE;IAC1B,KAAAC,eAAe,GAAW,EAAE;IAE5B,KAAAC,OAAO,GAA2B,IAAI;EAMnC;EAEHC,QAAQA,CAAA;IACN,IAAI,CAACC,kBAAkB,EAAE;IACzB,IAAI,CAACC,iBAAiB,GAAG,IAAI,CAACP,WAAW,CAACQ,oBAAoB,EAAE,CAAC,CAAC;EACpE;;EAEMF,kBAAkBA,CAAA;IAAA,IAAAG,KAAA;IAAA,OAAAC,iBAAA;MACtB,IAAI;QACF,MAAMC,WAAW,SAA8Bf,WAAW,CAACgB,kBAAkB,EAAE;QAC/EH,KAAI,CAACN,eAAe,GAAG,YAAYQ,WAAW,CAACE,MAAM,CAACC,QAAQ,eAAeH,WAAW,CAACE,MAAM,CAACE,SAAS,EAAE;QAC3GC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAER,KAAI,CAACN,eAAe,CAAC;OACvD,CAAC,OAAOe,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;;IACvD;EACH;EAEAC,UAAUA,CAAA;IACR,MAAMC,UAAU,GAAG,IAAIzB,mBAAmB,EAAE;IAE5CyB,UAAU,CACPC,0BAA0B,CAACC,SAAS,EAAE,cAAc,CAAC,CACrDC,IAAI,CAAEC,MAAM,IAAI;MACf,IAAI,CAACtB,aAAa,GAAGsB,MAAM,CAACC,OAAO,EAAE;MACrCT,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAE,IAAI,CAACf,aAAa,CAAC;IACzD,CAAC,CAAC,CACDwB,KAAK,CAAEC,GAAG,IAAI;MACbX,OAAO,CAACE,KAAK,CAAC,oBAAoB,EAAES,GAAG,CAAC;IAC1C,CAAC,CAAC;EACN;EAEAC,YAAYA,CAAA;IACV,IAAI,CAAC7B,OAAO,CAAC8B,IAAI,EAAE;EACrB;EAEAC,QAAQA,CAACC,GAAW;IAClB,IAAIA,GAAG,EAAE;MACPC,MAAM,CAACC,IAAI,CAACF,GAAG,EAAE,QAAQ,CAAC;;EAE9B;CACD;AAlDYlC,oBAAoB,GAAAqC,UAAA,EALhCxC,SAAS,CAAC;EACTyC,QAAQ,EAAE,uBAAuB;EACjCC,WAAW,EAAE,+BAA+B;EAC5CC,SAAS,EAAE,CAAC,+BAA+B;CAC5C,CAAC,C,EACWxC,oBAAoB,CAkDhC;SAlDYA,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}