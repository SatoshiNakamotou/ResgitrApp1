{"ast":null,"code":"import _asyncToGenerator from \"F:/A\\xF1o 2023-Semestre2/PROGRAMACION DE APLICACIONES MOVILES/DESARROLLO PROYECTO REGISTRAPP/registrApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { Preferences } from '@capacitor/preferences'; // Importamos Capacitor Preferences\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/region.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@ionic/angular\";\nfunction UserRegistrationPage_ion_select_option_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-select-option\", 4);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const region_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", region_r1.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", region_r1.nombre, \" \");\n  }\n}\nclass UserRegistrationPage {\n  constructor(regionService) {\n    this.regionService = regionService;\n    this.regiones = [];\n    this.regionSeleccionada = 0; // O el tipo de dato que uses para representar el ID de la región\n  }\n\n  ngOnInit() {\n    this.regionService.getRegiones().subscribe(response => {\n      this.regiones = response.regiones;\n      console.log(this.regiones);\n      // Llamamos a la función para almacenar datos usando Capacitor Preferences\n      this.guardarDatosEnPreferences();\n    });\n  }\n  // Función para almacenar datos en Preferences\n  guardarDatosEnPreferences() {\n    return _asyncToGenerator(function* () {\n      try {\n        const datosEjemplo = {\n          key: 'mi_clave',\n          value: 'mi_valor'\n        };\n        // Almacenamos los datos en Preferences\n        yield Preferences.set(datosEjemplo);\n        console.log('Datos almacenados en Preferences correctamente');\n      } catch (error) {\n        console.error('Error al almacenar datos en Preferences:', error);\n      }\n    })();\n  }\n}\n_class = UserRegistrationPage;\n_class.ɵfac = function UserRegistrationPage_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.RegionService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-user-registration\"]],\n  decls: 10,\n  vars: 4,\n  consts: [[3, \"translucent\"], [1, \"ion-padding\", 3, \"fullscreen\"], [\"placeholder\", \"Seleccionar regi\\u00F3n\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]],\n  template: function UserRegistrationPage_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\", 0)(1, \"ion-toolbar\")(2, \"ion-title\");\n      i0.ɵɵtext(3, \"Registro de Usuario\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(4, \"ion-content\", 1)(5, \"ion-item\")(6, \"ion-label\");\n      i0.ɵɵtext(7, \"Seleccione regi\\u00F3n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"ion-select\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function UserRegistrationPage_Template_ion_select_ngModelChange_8_listener($event) {\n        return ctx.regionSeleccionada = $event;\n      });\n      i0.ɵɵtemplate(9, UserRegistrationPage_ion_select_option_9_Template, 2, 2, \"ion-select-option\", 3);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"translucent\", true);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"fullscreen\", true);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.regionSeleccionada);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.regiones);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.NgControlStatus, i3.NgModel, i4.IonContent, i4.IonHeader, i4.IonItem, i4.IonLabel, i4.IonSelect, i4.IonSelectOption, i4.IonTitle, i4.IonToolbar, i4.SelectValueAccessor],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { UserRegistrationPage };","map":{"version":3,"names":["Preferences","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","region_r1","id","ɵɵadvance","ɵɵtextInterpolate1","nombre","UserRegistrationPage","constructor","regionService","regiones","regionSeleccionada","ngOnInit","getRegiones","subscribe","response","console","log","guardarDatosEnPreferences","_asyncToGenerator","datosEjemplo","key","value","set","error","ɵɵdirectiveInject","i1","RegionService","selectors","decls","vars","consts","template","UserRegistrationPage_Template","rf","ctx","ɵɵlistener","UserRegistrationPage_Template_ion_select_ngModelChange_8_listener","$event","ɵɵtemplate","UserRegistrationPage_ion_select_option_9_Template"],"sources":["F:\\Año 2023-Semestre2\\PROGRAMACION DE APLICACIONES MOVILES\\DESARROLLO PROYECTO REGISTRAPP\\registrApp\\src\\app\\user-registration\\user-registration.page.ts","F:\\Año 2023-Semestre2\\PROGRAMACION DE APLICACIONES MOVILES\\DESARROLLO PROYECTO REGISTRAPP\\registrApp\\src\\app\\user-registration\\user-registration.page.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { RegionService } from '../service/region.service';\nimport { Preferences } from '@capacitor/preferences'; // Importamos Capacitor Preferences\nimport { Region } from '../models/region.model';\n\n@Component({\n  selector: 'app-user-registration',\n  templateUrl: './user-registration.page.html',\n  styleUrls: ['./user-registration.page.scss'],\n})\n\nexport class UserRegistrationPage implements OnInit {\n  regiones: Region[] = [];\n  regionSeleccionada: number = 0; // O el tipo de dato que uses para representar el ID de la región\n\n  constructor(private regionService: RegionService) {}\n\n  ngOnInit() {\n    this.regionService.getRegiones().subscribe(response => {\n      this.regiones = response.regiones;\n      console.log(this.regiones);\n\n      // Llamamos a la función para almacenar datos usando Capacitor Preferences\n      this.guardarDatosEnPreferences();\n    });\n  }\n\n  // Función para almacenar datos en Preferences\n  async guardarDatosEnPreferences() {\n    try {\n      const datosEjemplo = {\n        key: 'mi_clave',\n        value: 'mi_valor',\n      };\n\n      // Almacenamos los datos en Preferences\n      await Preferences.set(datosEjemplo);\n\n      console.log('Datos almacenados en Preferences correctamente');\n    } catch (error) {\n      console.error('Error al almacenar datos en Preferences:', error);\n    }\n  }\n}\n","<ion-header [translucent]=\"true\">\n  <ion-toolbar>\n    <ion-title>Registro de Usuario</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content [fullscreen]=\"true\" class=\"ion-padding\">\n  <!-- Otros elementos del contenido si los tienes -->\n\n  <!-- Input con lista desplegable -->\n  <ion-item>\n    <ion-label>Seleccione región</ion-label>\n    <ion-select placeholder=\"Seleccionar región\" [(ngModel)]=\"regionSeleccionada\">\n      <!-- Iterar sobre las regiones y mostrarlas en la lista -->\n      <ion-select-option *ngFor=\"let region of regiones\" [value]=\"region.id\">\n        {{ region.nombre }}\n      </ion-select-option>\n    </ion-select>\n  </ion-item>\n\n</ion-content>\n"],"mappings":";;AAEA,SAASA,WAAW,QAAQ,wBAAwB,CAAC,CAAC;;;;;;;;ICYhDC,EAAA,CAAAC,cAAA,2BAAuE;IACrED,EAAA,CAAAE,MAAA,GACF;IAAAF,EAAA,CAAAG,YAAA,EAAoB;;;;IAF+BH,EAAA,CAAAI,UAAA,UAAAC,SAAA,CAAAC,EAAA,CAAmB;IACpEN,EAAA,CAAAO,SAAA,GACF;IADEP,EAAA,CAAAQ,kBAAA,MAAAH,SAAA,CAAAI,MAAA,MACF;;;ADXN,MAMaC,oBAAoB;EAI/BC,YAAoBC,aAA4B;IAA5B,KAAAA,aAAa,GAAbA,aAAa;IAHjC,KAAAC,QAAQ,GAAa,EAAE;IACvB,KAAAC,kBAAkB,GAAW,CAAC,CAAC,CAAC;EAEmB;;EAEnDC,QAAQA,CAAA;IACN,IAAI,CAACH,aAAa,CAACI,WAAW,EAAE,CAACC,SAAS,CAACC,QAAQ,IAAG;MACpD,IAAI,CAACL,QAAQ,GAAGK,QAAQ,CAACL,QAAQ;MACjCM,OAAO,CAACC,GAAG,CAAC,IAAI,CAACP,QAAQ,CAAC;MAE1B;MACA,IAAI,CAACQ,yBAAyB,EAAE;IAClC,CAAC,CAAC;EACJ;EAEA;EACMA,yBAAyBA,CAAA;IAAA,OAAAC,iBAAA;MAC7B,IAAI;QACF,MAAMC,YAAY,GAAG;UACnBC,GAAG,EAAE,UAAU;UACfC,KAAK,EAAE;SACR;QAED;QACA,MAAM1B,WAAW,CAAC2B,GAAG,CAACH,YAAY,CAAC;QAEnCJ,OAAO,CAACC,GAAG,CAAC,gDAAgD,CAAC;OAC9D,CAAC,OAAOO,KAAK,EAAE;QACdR,OAAO,CAACQ,KAAK,CAAC,0CAA0C,EAAEA,KAAK,CAAC;;IACjE;EACH;;SA/BWjB,oBAAoB;;mBAApBA,MAAoB,EAAAV,EAAA,CAAA4B,iBAAA,CAAAC,EAAA,CAAAC,aAAA;AAAA;;QAApBpB,MAAoB;EAAAqB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,8BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCXjCrC,EAAA,CAAAC,cAAA,oBAAiC;MAElBD,EAAA,CAAAE,MAAA,0BAAmB;MAAAF,EAAA,CAAAG,YAAA,EAAY;MAI9CH,EAAA,CAAAC,cAAA,qBAAqD;MAKtCD,EAAA,CAAAE,MAAA,6BAAiB;MAAAF,EAAA,CAAAG,YAAA,EAAY;MACxCH,EAAA,CAAAC,cAAA,oBAA8E;MAAjCD,EAAA,CAAAuC,UAAA,2BAAAC,kEAAAC,MAAA;QAAA,OAAAH,GAAA,CAAAxB,kBAAA,GAAA2B,MAAA;MAAA,EAAgC;MAE3EzC,EAAA,CAAA0C,UAAA,IAAAC,iDAAA,+BAEoB;MACtB3C,EAAA,CAAAG,YAAA,EAAa;;;MAjBLH,EAAA,CAAAI,UAAA,qBAAoB;MAMnBJ,EAAA,CAAAO,SAAA,GAAmB;MAAnBP,EAAA,CAAAI,UAAA,oBAAmB;MAMiBJ,EAAA,CAAAO,SAAA,GAAgC;MAAhCP,EAAA,CAAAI,UAAA,YAAAkC,GAAA,CAAAxB,kBAAA,CAAgC;MAErCd,EAAA,CAAAO,SAAA,GAAW;MAAXP,EAAA,CAAAI,UAAA,YAAAkC,GAAA,CAAAzB,QAAA,CAAW;;;;;;SDH1CH,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}