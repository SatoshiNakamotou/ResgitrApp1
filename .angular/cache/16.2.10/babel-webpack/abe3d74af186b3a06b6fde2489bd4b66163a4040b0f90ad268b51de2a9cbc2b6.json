{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/auth.service\";\nimport * as i2 from \"@ionic/angular\";\nclass LoginPage {\n  constructor(authService) {\n    this.authService = authService;\n  }\n  ngOnInit() {}\n  login() {\n    // Realiza la solicitud de inicio de sesión\n    const response = this.authService.login('user1', '1234');\n    // Valida la respuesta de la solicitud\n    if (response.status === 200) {\n      // La solicitud se realizó correctamente\n      // Redirige al usuario a la página principal\n      this.router.navigate(['/home']);\n    } else {\n      // Se produjo un error\n      // Muestra un mensaje de error al usuario\n      this.errorMessage = 'Error de inicio de sesión';\n    }\n  }\n}\n_class = LoginPage;\n_class.ɵfac = function LoginPage_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.AuthService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-login\"]],\n  decls: 16,\n  vars: 2,\n  consts: [[3, \"translucent\"], [3, \"fullscreen\"], [\"collapse\", \"condense\"], [\"size\", \"large\"]],\n  template: function LoginPage_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\", 0)(1, \"ion-toolbar\")(2, \"ion-title\");\n      i0.ɵɵtext(3, \"Login\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(4, \"ion-content\", 1)(5, \"ion-header\", 2)(6, \"ion-toolbar\")(7, \"ion-title\", 3);\n      i0.ɵɵtext(8, \"Chat GPT no entiende\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(9, \"ion-card\")(10, \"ion-card-header\")(11, \"ion-card-title\");\n      i0.ɵɵtext(12, \"Chat GPT no entiende\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"ion-card-content\")(14, \"p\");\n      i0.ɵɵtext(15, \"Lo siento, parece que hay un problema y el chat GPT no entiende la solicitud.\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"translucent\", true);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"fullscreen\", true);\n    }\n  },\n  dependencies: [i2.IonCard, i2.IonCardContent, i2.IonCardHeader, i2.IonCardTitle, i2.IonContent, i2.IonHeader, i2.IonTitle, i2.IonToolbar],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { LoginPage };","map":{"version":3,"names":["LoginPage","constructor","authService","ngOnInit","login","response","status","router","navigate","errorMessage","i0","ɵɵdirectiveInject","i1","AuthService","selectors","decls","vars","consts","template","LoginPage_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","ɵɵadvance"],"sources":["F:\\Año 2023-Semestre2\\PROGRAMACION DE APLICACIONES MOVILES\\DESARROLLO PROYECTO REGISTRAPP ACTUAL\\registrApp\\src\\app\\login\\login.page.ts","F:\\Año 2023-Semestre2\\PROGRAMACION DE APLICACIONES MOVILES\\DESARROLLO PROYECTO REGISTRAPP ACTUAL\\registrApp\\src\\app\\login\\login.page.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../service/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n\n  constructor(private authService: AuthService) {}\n\n  ngOnInit() {\n  }\n\n  login() {\n    // Realiza la solicitud de inicio de sesión\n    const response = this.authService.login('user1', '1234');\n\n    // Valida la respuesta de la solicitud\n    if (response.status === 200) {\n      // La solicitud se realizó correctamente\n      // Redirige al usuario a la página principal\n      this.router.navigate(['/home']);\n    } else {\n      // Se produjo un error\n      // Muestra un mensaje de error al usuario\n      this.errorMessage = 'Error de inicio de sesión';\n    }\n  }\n}","<!-- home.page.html -->\n\n<ion-header [translucent]=\"true\">\n  <ion-toolbar>\n    <ion-title>Login</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content [fullscreen]=\"true\">\n  <ion-header collapse=\"condense\">\n    <ion-toolbar>\n      <ion-title size=\"large\">Chat GPT no entiende</ion-title>\n    </ion-toolbar>\n  </ion-header>\n\n  <ion-card>\n    <ion-card-header>\n      <ion-card-title>Chat GPT no entiende</ion-card-title>\n    </ion-card-header>\n\n    <ion-card-content>\n      <p>Lo siento, parece que hay un problema y el chat GPT no entiende la solicitud.</p>\n    </ion-card-content>\n  </ion-card>\n</ion-content>\n"],"mappings":";;;;AAGA,MAKaA,SAAS;EAEpBC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;EAAgB;EAE/CC,QAAQA,CAAA,GACR;EAEAC,KAAKA,CAAA;IACH;IACA,MAAMC,QAAQ,GAAG,IAAI,CAACH,WAAW,CAACE,KAAK,CAAC,OAAO,EAAE,MAAM,CAAC;IAExD;IACA,IAAIC,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;MAC3B;MACA;MACA,IAAI,CAACC,MAAM,CAACC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;KAChC,MAAM;MACL;MACA;MACA,IAAI,CAACC,YAAY,GAAG,2BAA2B;;EAEnD;;SArBWT,SAAS;;mBAATA,MAAS,EAAAU,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA;AAAA;;QAATb,MAAS;EAAAc,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,mBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCNtBV,EAAA,CAAAY,cAAA,oBAAiC;MAElBZ,EAAA,CAAAa,MAAA,YAAK;MAAAb,EAAA,CAAAc,YAAA,EAAY;MAIhCd,EAAA,CAAAY,cAAA,qBAAiC;MAGHZ,EAAA,CAAAa,MAAA,2BAAoB;MAAAb,EAAA,CAAAc,YAAA,EAAY;MAI5Dd,EAAA,CAAAY,cAAA,eAAU;MAEUZ,EAAA,CAAAa,MAAA,4BAAoB;MAAAb,EAAA,CAAAc,YAAA,EAAiB;MAGvDd,EAAA,CAAAY,cAAA,wBAAkB;MACbZ,EAAA,CAAAa,MAAA,qFAA6E;MAAAb,EAAA,CAAAc,YAAA,EAAI;;;MAnB9Ed,EAAA,CAAAe,UAAA,qBAAoB;MAMnBf,EAAA,CAAAgB,SAAA,GAAmB;MAAnBhB,EAAA,CAAAe,UAAA,oBAAmB;;;;;;SDAnBzB,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}