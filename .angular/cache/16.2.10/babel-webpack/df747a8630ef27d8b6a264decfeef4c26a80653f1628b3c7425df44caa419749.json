{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/auth.service\";\nimport * as i2 from \"@ionic/angular\";\nclass LoginPage {\n  constructor(authService, navCtrl) {\n    this.authService = authService;\n    this.navCtrl = navCtrl;\n    this.username = '';\n    this.password = '';\n  }\n  ngOnInit() {}\n  login() {\n    console.log('Ingresando a login...');\n    this.authService.login(this.username, this.password).subscribe(response => {\n      console.log('Login exitoso', response);\n      // Guardar el estado de autenticación en Preferences\n      this.authService.saveAuthenticationStatus(true).then(() => {\n        console.log('Ingresando a auth service');\n        // Redirigir a la página principal o realizar alguna acción adicional\n        this.navCtrl.navigateRoot('/dashboard'); // Ajusta la ruta según tu aplicación\n      });\n    }, error => {\n      console.error('Error de autenticación', error);\n      // Manejar el error y mostrar un mensaje al usuario si es necesario\n    });\n  }\n}\n_class = LoginPage;\n_class.ɵfac = function LoginPage_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.NavController));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-login\"]],\n  decls: 16,\n  vars: 2,\n  consts: [[3, \"translucent\"], [3, \"fullscreen\"], [\"collapse\", \"condense\"], [\"size\", \"large\"]],\n  template: function LoginPage_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\", 0)(1, \"ion-toolbar\")(2, \"ion-title\");\n      i0.ɵɵtext(3, \"Login\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(4, \"ion-content\", 1)(5, \"ion-header\", 2)(6, \"ion-toolbar\")(7, \"ion-title\", 3);\n      i0.ɵɵtext(8, \"Chat GPT no entiende\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(9, \"ion-card\")(10, \"ion-card-header\")(11, \"ion-card-title\");\n      i0.ɵɵtext(12, \"Chat GPT no entiende\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"ion-card-content\")(14, \"p\");\n      i0.ɵɵtext(15, \"Lo siento, parece que hay un problema y el chat GPT no entiende la solicitud.\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"translucent\", true);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"fullscreen\", true);\n    }\n  },\n  dependencies: [i2.IonCard, i2.IonCardContent, i2.IonCardHeader, i2.IonCardTitle, i2.IonContent, i2.IonHeader, i2.IonTitle, i2.IonToolbar],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { LoginPage };","map":{"version":3,"names":["LoginPage","constructor","authService","navCtrl","username","password","ngOnInit","login","console","log","subscribe","response","saveAuthenticationStatus","then","navigateRoot","error","i0","ɵɵdirectiveInject","i1","AuthService","i2","NavController","selectors","decls","vars","consts","template","LoginPage_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","ɵɵadvance"],"sources":["F:\\Año 2023-Semestre2\\PROGRAMACION DE APLICACIONES MOVILES\\DESARROLLO PROYECTO REGISTRAPP ACTUAL\\registrApp\\src\\app\\login\\login.page.ts","F:\\Año 2023-Semestre2\\PROGRAMACION DE APLICACIONES MOVILES\\DESARROLLO PROYECTO REGISTRAPP ACTUAL\\registrApp\\src\\app\\login\\login.page.html"],"sourcesContent":["// login.page.ts\nimport { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../service/auth.service'; // Ajusta la ruta según tu aplicación\nimport { NavController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n  username: string = '';\n  password: string = '';\n\n  constructor(private authService: AuthService, private navCtrl: NavController) { }\n\n  ngOnInit() {\n  }\n\n  login(): void {\n    console.log('Ingresando a login...');\n    this.authService.login(this.username, this.password).subscribe(\n      (response: any) => {\n        console.log('Login exitoso', response);\n        // Guardar el estado de autenticación en Preferences\n        this.authService.saveAuthenticationStatus(true).then(() => {\n          console.log('Ingresando a auth service');\n          // Redirigir a la página principal o realizar alguna acción adicional\n          this.navCtrl.navigateRoot('/dashboard'); // Ajusta la ruta según tu aplicación\n        });\n      },\n      (error) => {\n        console.error('Error de autenticación', error);\n        // Manejar el error y mostrar un mensaje al usuario si es necesario\n      }\n    );\n  }\n}\n","<!-- home.page.html -->\n\n<ion-header [translucent]=\"true\">\n  <ion-toolbar>\n    <ion-title>Login</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content [fullscreen]=\"true\">\n  <ion-header collapse=\"condense\">\n    <ion-toolbar>\n      <ion-title size=\"large\">Chat GPT no entiende</ion-title>\n    </ion-toolbar>\n  </ion-header>\n\n  <ion-card>\n    <ion-card-header>\n      <ion-card-title>Chat GPT no entiende</ion-card-title>\n    </ion-card-header>\n\n    <ion-card-content>\n      <p>Lo siento, parece que hay un problema y el chat GPT no entiende la solicitud.</p>\n    </ion-card-content>\n  </ion-card>\n</ion-content>\n"],"mappings":";;;;AAKA,MAKaA,SAAS;EAIpBC,YAAoBC,WAAwB,EAAUC,OAAsB;IAAxD,KAAAD,WAAW,GAAXA,WAAW;IAAuB,KAAAC,OAAO,GAAPA,OAAO;IAH7D,KAAAC,QAAQ,GAAW,EAAE;IACrB,KAAAC,QAAQ,GAAW,EAAE;EAE2D;EAEhFC,QAAQA,CAAA,GACR;EAEAC,KAAKA,CAAA;IACHC,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;IACpC,IAAI,CAACP,WAAW,CAACK,KAAK,CAAC,IAAI,CAACH,QAAQ,EAAE,IAAI,CAACC,QAAQ,CAAC,CAACK,SAAS,CAC3DC,QAAa,IAAI;MAChBH,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEE,QAAQ,CAAC;MACtC;MACA,IAAI,CAACT,WAAW,CAACU,wBAAwB,CAAC,IAAI,CAAC,CAACC,IAAI,CAAC,MAAK;QACxDL,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;QACxC;QACA,IAAI,CAACN,OAAO,CAACW,YAAY,CAAC,YAAY,CAAC,CAAC,CAAC;MAC3C,CAAC,CAAC;IACJ,CAAC,EACAC,KAAK,IAAI;MACRP,OAAO,CAACO,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC,CACF;EACH;;SA1BWf,SAAS;;mBAATA,MAAS,EAAAgB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,aAAA;AAAA;;QAATrB,MAAS;EAAAsB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,mBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCRtBZ,EAAA,CAAAc,cAAA,oBAAiC;MAElBd,EAAA,CAAAe,MAAA,YAAK;MAAAf,EAAA,CAAAgB,YAAA,EAAY;MAIhChB,EAAA,CAAAc,cAAA,qBAAiC;MAGHd,EAAA,CAAAe,MAAA,2BAAoB;MAAAf,EAAA,CAAAgB,YAAA,EAAY;MAI5DhB,EAAA,CAAAc,cAAA,eAAU;MAEUd,EAAA,CAAAe,MAAA,4BAAoB;MAAAf,EAAA,CAAAgB,YAAA,EAAiB;MAGvDhB,EAAA,CAAAc,cAAA,wBAAkB;MACbd,EAAA,CAAAe,MAAA,qFAA6E;MAAAf,EAAA,CAAAgB,YAAA,EAAI;;;MAnB9EhB,EAAA,CAAAiB,UAAA,qBAAoB;MAMnBjB,EAAA,CAAAkB,SAAA,GAAmB;MAAnBlB,EAAA,CAAAiB,UAAA,oBAAmB;;;;;;SDEnBjC,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}