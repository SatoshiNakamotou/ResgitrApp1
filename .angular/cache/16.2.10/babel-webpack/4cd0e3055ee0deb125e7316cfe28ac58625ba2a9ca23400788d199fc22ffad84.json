{"ast":null,"code":"import _asyncToGenerator from \"F:/A\\xF1o 2023-Semestre2/PROGRAMACION DE APLICACIONES MOVILES/DESARROLLO PROYECTO REGISTRAPP/registrApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { Preferences } from '@capacitor/preferences'; // Importamos Capacitor Preferences\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/region.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@ionic/angular\";\nfunction UserRegistrationPage_ion_select_option_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-select-option\", 5);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const region_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", region_r1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", region_r1.nombre, \" \");\n  }\n}\nclass UserRegistrationPage {\n  constructor(regionService) {\n    this.regionService = regionService;\n    this.regiones = [];\n    this.regionSeleccionada = {\n      id: 0,\n      nombre: ''\n    };\n  }\n  ngOnInit() {\n    this.regionService.getRegiones().subscribe(response => {\n      this.regiones = response.regiones;\n      console.log(this.regiones);\n    });\n  }\n  guardarDatosEnPreferences() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        // Asumo que `regionSeleccionada` contiene un objeto completo de la región seleccionada\n        // y puedes almacenar más detalles según tus necesidades.\n        const datosUsuario = {\n          key: 'usuario_completo',\n          value: JSON.stringify({\n            region: _this.regionSeleccionada\n            // Otros datos del usuario aquí\n          })\n        };\n\n        yield Preferences.set(datosUsuario);\n        console.log('Datos del usuario almacenados en Preferences correctamente');\n      } catch (error) {\n        console.error('Error al almacenar datos del usuario en Preferences:', error);\n      }\n    })();\n  }\n}\n_class = UserRegistrationPage;\n_class.ɵfac = function UserRegistrationPage_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.RegionService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-user-registration\"]],\n  decls: 12,\n  vars: 4,\n  consts: [[3, \"translucent\"], [1, \"ion-padding\", 3, \"fullscreen\"], [\"placeholder\", \"Seleccionar regi\\u00F3n\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"click\"], [3, \"value\"]],\n  template: function UserRegistrationPage_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\", 0)(1, \"ion-toolbar\")(2, \"ion-title\");\n      i0.ɵɵtext(3, \"Registro de Usuario\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(4, \"ion-content\", 1)(5, \"ion-item\")(6, \"ion-label\");\n      i0.ɵɵtext(7, \"Seleccione regi\\u00F3n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"ion-select\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function UserRegistrationPage_Template_ion_select_ngModelChange_8_listener($event) {\n        return ctx.regionSeleccionada = $event;\n      });\n      i0.ɵɵtemplate(9, UserRegistrationPage_ion_select_option_9_Template, 2, 2, \"ion-select-option\", 3);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"ion-button\", 4);\n      i0.ɵɵlistener(\"click\", function UserRegistrationPage_Template_ion_button_click_10_listener() {\n        return ctx.guardarDatosEnPreferences();\n      });\n      i0.ɵɵtext(11, \"Guardar Datos del Usuario\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"translucent\", true);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"fullscreen\", true);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.regionSeleccionada);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.regiones);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.NgControlStatus, i3.NgModel, i4.IonButton, i4.IonContent, i4.IonHeader, i4.IonItem, i4.IonLabel, i4.IonSelect, i4.IonSelectOption, i4.IonTitle, i4.IonToolbar, i4.SelectValueAccessor],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { UserRegistrationPage };","map":{"version":3,"names":["Preferences","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","region_r1","ɵɵadvance","ɵɵtextInterpolate1","nombre","UserRegistrationPage","constructor","regionService","regiones","regionSeleccionada","id","ngOnInit","getRegiones","subscribe","response","console","log","guardarDatosEnPreferences","_this","_asyncToGenerator","datosUsuario","key","value","JSON","stringify","region","set","error","ɵɵdirectiveInject","i1","RegionService","selectors","decls","vars","consts","template","UserRegistrationPage_Template","rf","ctx","ɵɵlistener","UserRegistrationPage_Template_ion_select_ngModelChange_8_listener","$event","ɵɵtemplate","UserRegistrationPage_ion_select_option_9_Template","UserRegistrationPage_Template_ion_button_click_10_listener"],"sources":["F:\\Año 2023-Semestre2\\PROGRAMACION DE APLICACIONES MOVILES\\DESARROLLO PROYECTO REGISTRAPP\\registrApp\\src\\app\\user-registration\\user-registration.page.ts","F:\\Año 2023-Semestre2\\PROGRAMACION DE APLICACIONES MOVILES\\DESARROLLO PROYECTO REGISTRAPP\\registrApp\\src\\app\\user-registration\\user-registration.page.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { RegionService } from '../service/region.service';\nimport { Preferences } from '@capacitor/preferences'; // Importamos Capacitor Preferences\nimport { Region } from '../models/region.model';\n\n@Component({\n  selector: 'app-user-registration', // Asegúrate de que el selector sea correcto\n  templateUrl: './user-registration.page.html',\n  styleUrls: ['./user-registration.page.scss'],\n})\n\nexport class UserRegistrationPage implements OnInit {\n  regiones: Region[] = [];\n  regionSeleccionada: Region = { id: 0, nombre: '' }\n\n  constructor(private regionService: RegionService) {}\n\n  ngOnInit() {\n    this.regionService.getRegiones().subscribe(response => {\n      this.regiones = response.regiones;\n      console.log(this.regiones);\n    });\n  }\n\n  async guardarDatosEnPreferences() {\n    try {\n      // Asumo que `regionSeleccionada` contiene un objeto completo de la región seleccionada\n      // y puedes almacenar más detalles según tus necesidades.\n      const datosUsuario = {\n        key: 'usuario_completo',\n        value: JSON.stringify({\n          region: this.regionSeleccionada,\n          // Otros datos del usuario aquí\n        }),\n      };\n\n      await Preferences.set(datosUsuario);\n\n      console.log('Datos del usuario almacenados en Preferences correctamente');\n    } catch (error) {\n      console.error('Error al almacenar datos del usuario en Preferences:', error);\n    }\n  }\n}\n","<ion-header [translucent]=\"true\">\n  <ion-toolbar>\n    <ion-title>Registro de Usuario</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content [fullscreen]=\"true\" class=\"ion-padding\">\n  <!-- Input con lista desplegable -->\n  <ion-item>\n    <ion-label>Seleccione región</ion-label>\n    <ion-select placeholder=\"Seleccionar región\" [(ngModel)]=\"regionSeleccionada\">\n      <!-- Iterar sobre las regiones y mostrarlas en la lista -->\n      <ion-select-option *ngFor=\"let region of regiones\" [value]=\"region\">\n        {{ region.nombre }}\n      </ion-select-option>\n    </ion-select>\n  </ion-item>\n\n  <!-- Botón para almacenar datos del usuario en Preferences -->\n  <ion-button (click)=\"guardarDatosEnPreferences()\">Guardar Datos del Usuario</ion-button>\n</ion-content>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}