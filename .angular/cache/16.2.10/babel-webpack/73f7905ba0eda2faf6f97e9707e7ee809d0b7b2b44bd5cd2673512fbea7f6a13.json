{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet LoginPage = class LoginPage {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n  ngOnInit() {}\n  login() {\n    // Realizar solicitud de inicio de sesión\n    const response = this.authService.login('user1', '1234');\n    // Validar la respuesta\n    response.subscribe(response => {\n      // Valida el código de estado de la respuesta aquí\n      if (response.status === 200) {\n        // La solicitud se realizó correctamente\n        // Redirige al usuario a la página principal\n        this.router.navigate(['/home']);\n      } else {\n        // Se produjo un error\n        // Muestra un mensaje de error al usuario\n        this.errorMessage = 'Error de inicio de sesión';\n      }\n    });\n  }\n};\nLoginPage = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss']\n})], LoginPage);\nexport { LoginPage };","map":{"version":3,"names":["Component","LoginPage","constructor","authService","router","ngOnInit","login","response","subscribe","status","navigate","errorMessage","__decorate","selector","templateUrl","styleUrls"],"sources":["F:\\Año 2023-Semestre2\\PROGRAMACION DE APLICACIONES MOVILES\\DESARROLLO PROYECTO REGISTRAPP ACTUAL\\registrApp\\src\\app\\login\\login.page.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from './auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n\n  constructor(private authService: AuthService, private router: Router) {}\n\n  ngOnInit() {\n  }\n\n  login() {\n    // Realizar solicitud de inicio de sesión\n    const response = this.authService.login('user1', '1234');\n\n    // Validar la respuesta\n    response.subscribe((response) => {\n      // Valida el código de estado de la respuesta aquí\n      if (response.status === 200) {\n        // La solicitud se realizó correctamente\n        // Redirige al usuario a la página principal\n        this.router.navigate(['/home']);\n      } else {\n        // Se produjo un error\n        // Muestra un mensaje de error al usuario\n        this.errorMessage = 'Error de inicio de sesión';\n      }\n    });\n  }\n\n}"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AASjD,IAAaC,SAAS,GAAtB,MAAaA,SAAS;EAEpBC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,KAAAD,WAAW,GAAXA,WAAW;IAAuB,KAAAC,MAAM,GAANA,MAAM;EAAW;EAEvEC,QAAQA,CAAA,GACR;EAEAC,KAAKA,CAAA;IACH;IACA,MAAMC,QAAQ,GAAG,IAAI,CAACJ,WAAW,CAACG,KAAK,CAAC,OAAO,EAAE,MAAM,CAAC;IAExD;IACAC,QAAQ,CAACC,SAAS,CAAED,QAAQ,IAAI;MAC9B;MACA,IAAIA,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;QAC3B;QACA;QACA,IAAI,CAACL,MAAM,CAACM,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;OAChC,MAAM;QACL;QACA;QACA,IAAI,CAACC,YAAY,GAAG,2BAA2B;;IAEnD,CAAC,CAAC;EACJ;CAED;AA1BYV,SAAS,GAAAW,UAAA,EALrBZ,SAAS,CAAC;EACTa,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,mBAAmB;EAChCC,SAAS,EAAE,CAAC,mBAAmB;CAChC,CAAC,C,EACWd,SAAS,CA0BrB;SA1BYA,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}